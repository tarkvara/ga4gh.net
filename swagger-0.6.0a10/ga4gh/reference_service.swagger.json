{
  "swagger": "2.0",
  "info": {
    "title": "ga4gh/reference_service.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v0.6.0a10/references/search": {
      "post": {
        "summary": "Gets a list of `Reference` matching the search criteria.",
        "description": "`POST /references/search` must accept a JSON version of\n`SearchReferencesRequest` as the post body and will return a JSON\nversion of `SearchReferencesResponse`.",
        "operationId": "SearchReferences",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4ghSearchReferencesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ga4ghSearchReferencesRequest"
            }
          }
        ],
        "tags": [
          "ReferenceService"
        ]
      }
    },
    "/v0.6.0a10/references/{reference_id}": {
      "get": {
        "summary": "Gets a `Reference` by ID.",
        "description": "`GET /references/{reference_id}` will return a JSON version of\n`Reference`.",
        "operationId": "GetReference",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4ghReference"
            }
          }
        },
        "parameters": [
          {
            "name": "reference_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ReferenceService"
        ]
      }
    },
    "/v0.6.0a10/references/{reference_id}/bases": {
      "post": {
        "summary": "Lists `Reference` bases by ID and optional range.",
        "description": "`POST /listreferencebases` will return a JSON version of\n`ListReferenceBasesResponse`.",
        "operationId": "ListReferenceBases",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4ghListReferenceBasesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "reference_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ga4ghListReferenceBasesRequest"
            }
          }
        ],
        "tags": [
          "ReferenceService"
        ]
      }
    },
    "/v0.6.0a10/referencesets/search": {
      "post": {
        "summary": "Gets a list of `ReferenceSet` matching the search criteria.",
        "description": "`POST /referencesets/search` must accept a JSON version of\n`SearchReferenceSetsRequest` as the post body and will return a JSON\nversion of `SearchReferenceSetsResponse`.",
        "operationId": "SearchReferenceSets",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4ghSearchReferenceSetsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ga4ghSearchReferenceSetsRequest"
            }
          }
        ],
        "tags": [
          "ReferenceService"
        ]
      }
    },
    "/v0.6.0a10/referencesets/{reference_set_id}": {
      "get": {
        "summary": "Gets a `ReferenceSet` by ID.",
        "description": "`GET /referencesets/{reference_set_id}` will return a JSON version of\n`ReferenceSet`.",
        "operationId": "GetReferenceSet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4ghReferenceSet"
            }
          }
        },
        "parameters": [
          {
            "name": "reference_set_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ReferenceService"
        ]
      }
    }
  },
  "definitions": {
    "ga4ghAnalysis": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Formats of id | name | description | accessions are described in the\ndocumentation on general attributes and formats."
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "description": "The time at which this record was created, in ISO 8601 format."
        },
        "updated": {
          "type": "string",
          "description": "The time at which this record was last updated, in ISO 8601 format."
        },
        "type": {
          "type": "string",
          "description": "The type of analysis."
        },
        "software": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The software run to generate this analysis."
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes",
          "description": "A map of additional analysis information."
        }
      },
      "description": "An analysis contains an interpretation of one or several experiments. (e.g.\nSNVs, copy number variations, methylation status) together with information\nabout the methodology used."
    },
    "ga4ghAttributeValue": {
      "type": "object",
      "properties": {
        "string_value": {
          "type": "string"
        },
        "int64_value": {
          "type": "string",
          "format": "int64"
        },
        "int32_value": {
          "type": "integer",
          "format": "int32"
        },
        "bool_value": {
          "type": "boolean",
          "format": "boolean"
        },
        "double_value": {
          "type": "number",
          "format": "double"
        },
        "external_identifier": {
          "$ref": "#/definitions/ga4ghExternalIdentifier"
        },
        "ontology_term": {
          "$ref": "#/definitions/ga4ghOntologyTerm"
        },
        "experiment": {
          "$ref": "#/definitions/ga4ghExperiment"
        },
        "program": {
          "$ref": "#/definitions/ga4ghProgram"
        },
        "analysis": {
          "$ref": "#/definitions/ga4ghAnalysis"
        },
        "null_value": {
          "$ref": "#/definitions/ga4ghNullValue"
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes"
        },
        "attribute_list": {
          "$ref": "#/definitions/ga4ghAttributeValueList"
        }
      },
      "description": "Type defining a collection of attributes associated with various protocol\nrecords. Each attribute is a name that maps to an array of one or more\nvalues. Values are chosen from both internal protobuf types and GA4GH.\n Values should be split into array elements instead of using a separator\nsyntax that needs to parsed."
    },
    "ga4ghAttributeValueList": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4ghAttributeValue"
          }
        }
      }
    },
    "ga4ghAttributes": {
      "type": "object",
      "properties": {
        "attr": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ga4ghAttributeValueList"
          }
        }
      }
    },
    "ga4ghExperiment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The experiment ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the experiment."
        },
        "description": {
          "type": "string",
          "description": "A description of the experiment."
        },
        "message_create_time": {
          "type": "string",
          "title": "The time at which this message was created.\nFormat: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)"
        },
        "message_update_time": {
          "type": "string",
          "title": "The time at which this message was last updated.\nFormat: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)"
        },
        "run_time": {
          "type": "string",
          "title": "The time at which this experiment was performed.\nGranularity here is variable (e.g. date only).\nFormat: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)"
        },
        "molecule": {
          "type": "string",
          "title": "The molecule examined in this experiment. (e.g. genomics DNA, total RNA)"
        },
        "strategy": {
          "type": "string",
          "title": "The experiment technique or strategy applied to the sample.\n(e.g. whole genome sequencing, RNA-seq, RIP-seq)"
        },
        "selection": {
          "type": "string",
          "title": "The method used to enrich the target. (e.g. immunoprecipitation, size\nfractionation, MNase digestion)"
        },
        "library": {
          "type": "string",
          "description": "The name of the library used as part of this experiment."
        },
        "library_layout": {
          "type": "string",
          "description": "The configuration of sequenced reads. (e.g. Single or Paired)."
        },
        "instrument_model": {
          "type": "string",
          "description": "The instrument model used as part of this experiment.\nThis maps to sequencing technology in BAM."
        },
        "instrument_data_file": {
          "type": "string",
          "title": "The data file generated by the instrument.\nTODO: This isn't actually a file is it?\nShould this be `instrumentData` instead?"
        },
        "sequencing_center": {
          "type": "string",
          "description": "The sequencing center used as part of this experiment."
        },
        "platform_unit": {
          "type": "string",
          "description": "The platform unit used as part of this experiment. This is a\nflowcell-barcode\nor slide unique identifier."
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes",
          "description": "A map of additional experiment information."
        }
      },
      "description": "An experimental preparation of a sample."
    },
    "ga4ghExternalIdentifier": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string",
          "description": "The source of the identifier, e.g. `Ensembl`."
        },
        "identifier": {
          "type": "string",
          "description": "The ID defined by the external database, e.g. `ENST00000000000`."
        },
        "version": {
          "type": "string",
          "description": "The version of the object or the database, e.g. `78`."
        }
      },
      "title": "Identifier from a public database"
    },
    "ga4ghGetReferenceRequest": {
      "type": "object",
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "The ID of the `Reference` to be retrieved."
        }
      },
      "description": "This request maps to the URL `GET /references/{reference_id}`."
    },
    "ga4ghGetReferenceSetRequest": {
      "type": "object",
      "properties": {
        "reference_set_id": {
          "type": "string",
          "description": "The ID of the `ReferenceSet` to be retrieved."
        }
      },
      "description": "This request maps to the URL `GET /referencesets/{reference_set_id}`."
    },
    "ga4ghListReferenceBasesRequest": {
      "type": "object",
      "properties": {
        "reference_id": {
          "type": "string",
          "description": "The ID of the `Reference` to be retrieved."
        },
        "start": {
          "type": "string",
          "format": "int64",
          "description": "The start position (0-based) of this query. Defaults to 0.\nGenomic positions are non-negative integers less than reference length.\nRequests spanning the join of circular genomes are represented as\ntwo requests one on each side of the join (position 0)."
        },
        "end": {
          "type": "string",
          "format": "int64",
          "description": "The end position (0-based, exclusive) of this query. Defaults\nto the length of this `Reference`."
        },
        "page_token": {
          "type": "string",
          "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."
        }
      },
      "description": "This request retrieves a region of a reference genome when sent to \nthe `/listreferencebases` endpoint."
    },
    "ga4ghListReferenceBasesResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "int64",
          "description": "The offset position (0-based) of the given sequence from the start of this\n`Reference`. This value will differ for each page in a paginated request."
        },
        "sequence": {
          "type": "string",
          "description": "A substring of the bases that make up this reference. Bases are represented\nas IUPAC-IUB codes; this string matches the regexp `[ACGTMRWSYKVHDBN]*`."
        },
        "next_page_token": {
          "type": "string",
          "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."
        }
      },
      "description": "The response from `POST /listreferencebases` expressed as JSON."
    },
    "ga4ghNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": " - NULL_VALUE: Null value."
    },
    "ga4ghOntologyTerm": {
      "type": "object",
      "properties": {
        "term_id": {
          "type": "string",
          "description": "Ontology term identifier - the CURIE for an ontology term. It\ndiffers from the standard GA4GH schema's :ref:`id \u003capidesign_object_ids\u003e`\nin that it is a CURIE pointing to an information resource outside of the\nscope of the schema or its resource implementation."
        },
        "term": {
          "type": "string",
          "description": "Ontology term - the label of the ontology term the termId is pointing to."
        }
      },
      "title": "An ontology term describing an attribute. (e.g. the phenotype attribute\n'polydactyly' from HPO)"
    },
    "ga4ghProgram": {
      "type": "object",
      "properties": {
        "command_line": {
          "type": "string",
          "description": "The command line used to run this program."
        },
        "id": {
          "type": "string",
          "description": "The user specified ID of the program."
        },
        "name": {
          "type": "string",
          "description": "The name of the program."
        },
        "prev_program_id": {
          "type": "string",
          "description": "The ID of the program run before this one."
        },
        "version": {
          "type": "string",
          "description": "The version of the program run."
        }
      },
      "description": "A Program describes software used in data processing or analysis."
    },
    "ga4ghReference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The reference ID. Unique within the repository."
        },
        "length": {
          "type": "string",
          "format": "int64",
          "description": "The length of this reference's sequence."
        },
        "md5checksum": {
          "type": "string",
          "description": "The MD5 checksum uniquely representing this `Reference` as a lower-case\nhexadecimal string, calculated as the MD5 of the upper-case sequence\nexcluding all whitespace characters (this is equivalent to SQ:M5 in SAM)."
        },
        "name": {
          "type": "string",
          "description": "The unique name of this reference within the Reference Set (e.g. '22')."
        },
        "source_uri": {
          "type": "string",
          "description": "The URI from which the sequence was obtained. Specifies a FASTA format\nfile/string with one name, sequence pair. In most cases, clients should\ncall\nthe `getReferenceBases()` method to obtain sequence bases for a `Reference`\ninstead of attempting to retrieve this URI."
        },
        "source_accessions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) which\nmust include\na version number, e.g. `GCF_000001405.26`."
        },
        "is_derived": {
          "type": "boolean",
          "format": "boolean",
          "description": "A sequence X is said to be derived from source sequence Y, if X and Y\nare of the same length and the per-base sequence divergence at A/C/G/T\nbases\nis sufficiently small. Two sequences derived from the same official\nsequence share the same coordinates and annotations, and\ncan be replaced with the official sequence for certain use cases."
        },
        "source_divergence": {
          "type": "number",
          "format": "float",
          "description": "The `sourceDivergence` is the fraction of non-indel bases that do not match\nthe\nreference this message was derived from."
        },
        "species": {
          "$ref": "#/definitions/ga4ghOntologyTerm",
          "title": "For a representation of an NCBI Taxon ID as an OntologyTerm, see\nNCBITaxon Ontology\n  http://www.obofoundry.org/ontology/ncbitaxon.html\nFor example, 'Homo sapiens' has the ID 9606. The NCBITaxon ontology ID for\nthis is NCBITaxon:9606, which has the URI\nhttp://purl.obolibrary.org/obo/NCBITaxon_9606"
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes",
          "description": "A map of additional information."
        }
      },
      "description": "A `Reference` is a canonical assembled contig, intended to act as a\nreference coordinate space for other genomic annotations. A single\n`Reference` might represent the human chromosome 1, for instance.\n\n`Reference` s are designed to be immutable."
    },
    "ga4ghReferenceSet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The reference set ID. Unique in the repository."
        },
        "name": {
          "type": "string",
          "description": "The reference set name."
        },
        "md5checksum": {
          "type": "string",
          "description": "Order-independent MD5 checksum which identifies this `ReferenceSet`.\n\nTo compute this checksum, make a list of `Reference.md5checksum` for all\n`Reference` s in this set. Then sort that list, and take the MD5 hash of\nall the strings concatenated together. Express the hash as a lower-case\nhexadecimal string."
        },
        "species": {
          "$ref": "#/definitions/ga4ghOntologyTerm",
          "title": "For a representation of an NCBI Taxon ID as an OntologyTerm, see\nNCBITaxon Ontology\n  http://www.obofoundry.org/ontology/ncbitaxon.html\nFor example, 'Homo sapiens' has the ID 9606. The NCBITaxon ontology ID for\nthis is NCBITaxon:9606, which has the URI\nhttp://purl.obolibrary.org/obo/NCBITaxon_9606"
        },
        "description": {
          "type": "string",
          "description": "Optional free text description of this reference set."
        },
        "assembly_id": {
          "type": "string",
          "description": "The remaining information is about the source of the sequences\nPublic id of this reference set, such as `GRCh37`."
        },
        "source_uri": {
          "type": "string",
          "description": "Specifies a FASTA format file/string."
        },
        "source_accessions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "All known corresponding accession IDs in INSDC (GenBank/ENA/DDBJ) ideally\nwith a version number, e.g. `NC_000001.11`."
        },
        "is_derived": {
          "type": "boolean",
          "format": "boolean",
          "description": "A reference set may be derived from a source if it contains\nadditional sequences, or some of the sequences within it are derived\n(see the definition of `isDerived` in `Reference`)."
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes",
          "description": "A map of additional information."
        }
      },
      "description": "A `ReferenceSet` is a set of `Reference` s which typically comprise a\nreference assembly, such as `GRCh38`. A `ReferenceSet` defines a common\ncoordinate space for comparing reference-aligned experimental data."
    },
    "ga4ghSearchReferenceSetsRequest": {
      "type": "object",
      "properties": {
        "md5checksum": {
          "type": "string",
          "description": "If unset, return the reference sets for which the\n`md5checksum` matches this string (case-sensitive, exact match).\nSee `ReferenceSet::md5checksum` for details."
        },
        "accession": {
          "type": "string",
          "description": "If unset, return the reference sets for which the `accession`\nmatches this string (case-sensitive, exact match)."
        },
        "assembly_id": {
          "type": "string",
          "description": "If unset, return the reference sets for which the `assemblyId`\nmatches this string (case-sensitive, exact match)."
        },
        "page_size": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."
        },
        "page_token": {
          "type": "string",
          "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."
        }
      },
      "description": "****************  /referencesets  *******************\nThis request maps to the body of `POST /referencesets/search` as JSON."
    },
    "ga4ghSearchReferenceSetsResponse": {
      "type": "object",
      "properties": {
        "reference_sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4ghReferenceSet"
          },
          "description": "The list of matching reference sets."
        },
        "next_page_token": {
          "type": "string",
          "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."
        }
      },
      "description": "This is the response from `POST /referencesets/search` expressed as JSON."
    },
    "ga4ghSearchReferencesRequest": {
      "type": "object",
      "properties": {
        "reference_set_id": {
          "type": "string",
          "description": "The `ReferenceSet` to search."
        },
        "md5checksum": {
          "type": "string",
          "description": "If specified, return the references for which the\n`md5checksum` matches this string (case-sensitive, exact match).\nSee `ReferenceSet::md5checksum` for details."
        },
        "accession": {
          "type": "string",
          "description": "If specified, return the references for which the `accession`\nmatches this string (case-sensitive, exact match)."
        },
        "page_size": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the maximum number of results to return in a single page.\nIf unspecified, a system default will be used."
        },
        "page_token": {
          "type": "string",
          "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."
        }
      },
      "description": "****************  /references  *******************\nThis request maps to the body of `POST /references/search` as JSON."
    },
    "ga4ghSearchReferencesResponse": {
      "type": "object",
      "properties": {
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4ghReference"
          },
          "description": "The list of matching references."
        },
        "next_page_token": {
          "type": "string",
          "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."
        }
      },
      "description": "This is the response from `POST /references/search` expressed as JSON."
    }
  }
}
