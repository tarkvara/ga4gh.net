{
  "swagger": "2.0",
  "info": {
    "title": "ga4gh/allele_annotation_service.proto",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v0.6.0a10/variantannotations/search": {
      "post": {
        "summary": "Gets a list of `VariantAnnotation` messages matching the search criteria.",
        "description": "This allows the mining of allele-specific annotations on a VariantSet by\neither a region or by a set of genomic features. Where a region is supplied\nannotation of all alleles vs all features in the region is returned. Where\na set of features is supplied, only annotations against these features\n(matching on featuretype and id) are returned and other overlapping\nfeatures are ignored.\n\n`variantannotationsets/search` returns information on the input to the\nannotation. This will be a VariantSet and the reference data and software\nversions used in calculating the annotation. It is essential this\ninformation is exhaustive.\n\n`POST /variantannotations/search` must accept a JSON version of\n`SearchVariantAnnotationsRequest` as the post body and will return a JSON\nversion of `SearchVariantAnnotationsResponse`.",
        "operationId": "SearchVariantAnnotations",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4ghSearchVariantAnnotationsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ga4ghSearchVariantAnnotationsRequest"
            }
          }
        ],
        "tags": [
          "AlleleAnnotationService"
        ]
      }
    },
    "/v0.6.0a10/variantannotationsets/search": {
      "post": {
        "summary": "Returns a list of available variant annotation sets.",
        "description": "`POST /variantannotationsets/search` must accept a JSON version of\n`SearchVariantAnnotationSetsRequest` as the post body and will return a\nJSON version of `SearchVariantAnnotationSetsResponse`.",
        "operationId": "SearchVariantAnnotationSets",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4ghSearchVariantAnnotationSetsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ga4ghSearchVariantAnnotationSetsRequest"
            }
          }
        ],
        "tags": [
          "AlleleAnnotationService"
        ]
      }
    },
    "/v0.6.0a10/variantannotationsets/{variant_annotation_set_id}": {
      "get": {
        "summary": "Gets an `VariantAnnotationSet` by ID.",
        "description": "`GET /variantannotationsets/{variant_annotation_set_id}` will return a JSON\nversion of `VariantAnnotationSet`.",
        "operationId": "GetVariantAnnotationSet",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ga4ghVariantAnnotationSet"
            }
          }
        },
        "parameters": [
          {
            "name": "variant_annotation_set_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AlleleAnnotationService"
        ]
      }
    }
  },
  "definitions": {
    "ga4ghAlleleLocation": {
      "type": "object",
      "properties": {
        "start": {
          "type": "integer",
          "format": "int32",
          "title": "Relative start position of the allele in this coordinate system"
        },
        "end": {
          "type": "integer",
          "format": "int32",
          "title": "Relative end position of the allele in this coordinate system"
        },
        "reference_sequence": {
          "type": "string",
          "title": "Reference sequence in feature (this should be the codon at CDS level)"
        },
        "alternate_sequence": {
          "type": "string",
          "title": "Alternate sequence in feature (this should be the codon at CDS level)"
        }
      },
      "title": "An allele location record holds the location of an allele relative to a non -\ngenomic coordinate system such as a CDS or protein and holds the reference\nand alternate sequence where appropriate"
    },
    "ga4ghAnalysis": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Formats of id | name | description | accessions are described in the\ndocumentation on general attributes and formats."
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "description": "The time at which this record was created, in ISO 8601 format."
        },
        "updated": {
          "type": "string",
          "description": "The time at which this record was last updated, in ISO 8601 format."
        },
        "type": {
          "type": "string",
          "description": "The type of analysis."
        },
        "software": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The software run to generate this analysis."
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes",
          "description": "A map of additional analysis information."
        }
      },
      "description": "An analysis contains an interpretation of one or several experiments. (e.g.\nSNVs, copy number variations, methylation status) together with information\nabout the methodology used."
    },
    "ga4ghAnalysisResult": {
      "type": "object",
      "properties": {
        "analysis_id": {
          "type": "string",
          "title": "The ID of the analysis record for this result"
        },
        "result": {
          "type": "string",
          "title": "The text-based result for this analysis"
        },
        "score": {
          "type": "integer",
          "format": "int32",
          "title": "The numeric score for this analysis"
        }
      },
      "description": "An AnalysisResult record holds the output of a prediction package such as\nSIFT on a specific allele."
    },
    "ga4ghAttributeValue": {
      "type": "object",
      "properties": {
        "string_value": {
          "type": "string"
        },
        "int64_value": {
          "type": "string",
          "format": "int64"
        },
        "int32_value": {
          "type": "integer",
          "format": "int32"
        },
        "bool_value": {
          "type": "boolean",
          "format": "boolean"
        },
        "double_value": {
          "type": "number",
          "format": "double"
        },
        "external_identifier": {
          "$ref": "#/definitions/ga4ghExternalIdentifier"
        },
        "ontology_term": {
          "$ref": "#/definitions/ga4ghOntologyTerm"
        },
        "experiment": {
          "$ref": "#/definitions/ga4ghExperiment"
        },
        "program": {
          "$ref": "#/definitions/ga4ghProgram"
        },
        "analysis": {
          "$ref": "#/definitions/ga4ghAnalysis"
        },
        "null_value": {
          "$ref": "#/definitions/ga4ghNullValue"
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes"
        },
        "attribute_list": {
          "$ref": "#/definitions/ga4ghAttributeValueList"
        }
      },
      "description": "Type defining a collection of attributes associated with various protocol\nrecords. Each attribute is a name that maps to an array of one or more\nvalues. Values are chosen from both internal protobuf types and GA4GH.\n Values should be split into array elements instead of using a separator\nsyntax that needs to parsed."
    },
    "ga4ghAttributeValueList": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4ghAttributeValue"
          }
        }
      }
    },
    "ga4ghAttributes": {
      "type": "object",
      "properties": {
        "attr": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ga4ghAttributeValueList"
          }
        }
      }
    },
    "ga4ghExperiment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The experiment ID"
        },
        "name": {
          "type": "string",
          "description": "The name of the experiment."
        },
        "description": {
          "type": "string",
          "description": "A description of the experiment."
        },
        "message_create_time": {
          "type": "string",
          "title": "The time at which this message was created.\nFormat: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)"
        },
        "message_update_time": {
          "type": "string",
          "title": "The time at which this message was last updated.\nFormat: ISO 8601, YYYY-MM-DDTHH:MM:SS.SSS (e.g. 2015-02-10T00:03:42.123Z)"
        },
        "run_time": {
          "type": "string",
          "title": "The time at which this experiment was performed.\nGranularity here is variable (e.g. date only).\nFormat: ISO 8601, YYYY-MM-DDTHH:MM:SS (e.g. 2015-02-10T00:03:42)"
        },
        "molecule": {
          "type": "string",
          "title": "The molecule examined in this experiment. (e.g. genomics DNA, total RNA)"
        },
        "strategy": {
          "type": "string",
          "title": "The experiment technique or strategy applied to the sample.\n(e.g. whole genome sequencing, RNA-seq, RIP-seq)"
        },
        "selection": {
          "type": "string",
          "title": "The method used to enrich the target. (e.g. immunoprecipitation, size\nfractionation, MNase digestion)"
        },
        "library": {
          "type": "string",
          "description": "The name of the library used as part of this experiment."
        },
        "library_layout": {
          "type": "string",
          "description": "The configuration of sequenced reads. (e.g. Single or Paired)."
        },
        "instrument_model": {
          "type": "string",
          "description": "The instrument model used as part of this experiment.\nThis maps to sequencing technology in BAM."
        },
        "instrument_data_file": {
          "type": "string",
          "title": "The data file generated by the instrument.\nTODO: This isn't actually a file is it?\nShould this be `instrumentData` instead?"
        },
        "sequencing_center": {
          "type": "string",
          "description": "The sequencing center used as part of this experiment."
        },
        "platform_unit": {
          "type": "string",
          "description": "The platform unit used as part of this experiment. This is a\nflowcell-barcode\nor slide unique identifier."
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes",
          "description": "A map of additional experiment information."
        }
      },
      "description": "An experimental preparation of a sample."
    },
    "ga4ghExternalIdentifier": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string",
          "description": "The source of the identifier, e.g. `Ensembl`."
        },
        "identifier": {
          "type": "string",
          "description": "The ID defined by the external database, e.g. `ENST00000000000`."
        },
        "version": {
          "type": "string",
          "description": "The version of the object or the database, e.g. `78`."
        }
      },
      "title": "Identifier from a public database"
    },
    "ga4ghGetVariantAnnotationSetRequest": {
      "type": "object",
      "properties": {
        "variant_annotation_set_id": {
          "type": "string",
          "description": "The ID of the `VariantAnnotationSet` to be retrieved."
        }
      },
      "description": "This request maps to the URL `GET /variantannotationsets/{id}`."
    },
    "ga4ghHGVSAnnotation": {
      "type": "object",
      "properties": {
        "genomic": {
          "type": "string"
        },
        "transcript": {
          "type": "string"
        },
        "protein": {
          "type": "string"
        }
      },
      "description": "A HGVSAnnotation record holds Human Genome Variation Society descriptions of\nthe sequence change with respect to genomic, transcript and protein\nsequences. See: http:// www.hgvs.org/mutnomen/recs.html.\nDescriptions should be provided at genomic level\n - Descriptions at transcript level should be provided when the allele\n   lies within a transcript\n - Descriptions at protein level should be provided when the allele\n   lies within the translated sequence or stop codon."
    },
    "ga4ghNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": " - NULL_VALUE: Null value."
    },
    "ga4ghOntologyTerm": {
      "type": "object",
      "properties": {
        "term_id": {
          "type": "string",
          "description": "Ontology term identifier - the CURIE for an ontology term. It\ndiffers from the standard GA4GH schema's :ref:`id \u003capidesign_object_ids\u003e`\nin that it is a CURIE pointing to an information resource outside of the\nscope of the schema or its resource implementation."
        },
        "term": {
          "type": "string",
          "description": "Ontology term - the label of the ontology term the termId is pointing to."
        }
      },
      "title": "An ontology term describing an attribute. (e.g. the phenotype attribute\n'polydactyly' from HPO)"
    },
    "ga4ghProgram": {
      "type": "object",
      "properties": {
        "command_line": {
          "type": "string",
          "description": "The command line used to run this program."
        },
        "id": {
          "type": "string",
          "description": "The user specified ID of the program."
        },
        "name": {
          "type": "string",
          "description": "The name of the program."
        },
        "prev_program_id": {
          "type": "string",
          "description": "The ID of the program run before this one."
        },
        "version": {
          "type": "string",
          "description": "The version of the program run."
        }
      },
      "description": "A Program describes software used in data processing or analysis."
    },
    "ga4ghSearchVariantAnnotationSetsRequest": {
      "type": "object",
      "properties": {
        "variant_set_id": {
          "type": "string",
          "description": "Required. The `VariantSet` to search."
        },
        "page_size": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the maximum number of results to return in a single page. If\nunspecified, a system default will be used."
        },
        "page_token": {
          "type": "string",
          "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."
        }
      },
      "description": "This request maps to the body of `POST /variantannotationsets/search` as\nJSON."
    },
    "ga4ghSearchVariantAnnotationSetsResponse": {
      "type": "object",
      "properties": {
        "variant_annotation_sets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4ghVariantAnnotationSet"
          },
          "description": "The list of matching variant annotation sets."
        },
        "next_page_token": {
          "type": "string",
          "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."
        }
      },
      "description": "This is the response from `POST /variantannotationsets/search` expressed as\nJSON."
    },
    "ga4ghSearchVariantAnnotationsRequest": {
      "type": "object",
      "properties": {
        "variant_annotation_set_id": {
          "type": "string",
          "description": "Required. The ID of the variant annotation set to search over."
        },
        "reference_name": {
          "type": "string",
          "description": "Only return variants with reference alleles on the reference with this\nname. One of this field or `reference_id` is required."
        },
        "reference_id": {
          "type": "string",
          "description": "Only return variants with reference alleles on the reference with this\nID. One of this field or `reference_name` is required."
        },
        "start": {
          "type": "string",
          "format": "int64",
          "description": "Required if reference_name or reference_id supplied. The beginning of the\nwindow (0-based, inclusive) for which variants with overlapping reference\nalleles should be returned. Genomic positions are non-negative integers\nless than reference length. Requests spanning the join of circular\ngenomes are represented as two requests one on each side of the join\n(position 0)."
        },
        "end": {
          "type": "string",
          "format": "int64",
          "description": "Required if reference_name or reference_id supplied. The end of the window\n(0-based, exclusive) for which variants with overlapping reference\nalleles should be returned."
        },
        "effects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4ghOntologyTerm"
          },
          "description": "This filter allows variant, transcript combinations to be extracted by\neffect type(s). Only return variant annotations including any of these\neffects and only return transcript effects including any of these\neffects. Exact matching across all fields of the Sequence Ontology\nOntologyTerm is required. (A transcript effect may have multiple SO\neffects which will all be reported.) If empty, return all variant\nannotations."
        },
        "page_size": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the maximum number of results to return in a single page. If\nunspecified, a system default will be used."
        },
        "page_token": {
          "type": "string",
          "description": "The continuation token, which is used to page through large result sets.\nTo get the next page of results, set this parameter to the value of\n`next_page_token` from the previous response."
        }
      },
      "description": "This request maps to the body of `POST /variantannotations/search` as JSON."
    },
    "ga4ghSearchVariantAnnotationsResponse": {
      "type": "object",
      "properties": {
        "variant_annotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4ghVariantAnnotation"
          },
          "description": "The list of matching variant annotations."
        },
        "next_page_token": {
          "type": "string",
          "description": "The continuation token, which is used to page through large result sets.\nProvide this value in a subsequent request to return the next page of\nresults. This field will be empty if there aren't any additional results."
        }
      },
      "description": "This is the response from `POST /variantannotations/search` expressed as\nJSON."
    },
    "ga4ghTranscriptEffect": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the transcript effect record"
        },
        "feature_id": {
          "type": "string",
          "title": "The id of the transcript feature the annotation is relative to.\nTODO: derive unique id from digest of data [location, allele, transcript?]"
        },
        "alternate_bases": {
          "type": "string",
          "description": "Alternate allele - a variant may have more than one alternate allele,\neach of which will have distinct annotation."
        },
        "effects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4ghOntologyTerm"
          },
          "description": "Effect of variant on this feature."
        },
        "hgvs_annotation": {
          "$ref": "#/definitions/ga4ghHGVSAnnotation",
          "description": "Human Genome Variation Society variant descriptions."
        },
        "cdna_location": {
          "$ref": "#/definitions/ga4ghAlleleLocation",
          "description": "Change relative to cDNA."
        },
        "cds_location": {
          "$ref": "#/definitions/ga4ghAlleleLocation",
          "description": "Change relative to coding sequence."
        },
        "protein_location": {
          "$ref": "#/definitions/ga4ghAlleleLocation",
          "description": "Change relative to protein."
        },
        "analysis_results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4ghAnalysisResult"
          },
          "description": "Output from prediction packages such as SIFT."
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes",
          "description": "A map of additional information about the Transcript Effect."
        }
      },
      "title": "A transcript effect record is a set of information describing the effect of\nan allele on a transcript"
    },
    "ga4ghVariantAnnotation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of this VariantAnnotation."
        },
        "variant_id": {
          "type": "string",
          "description": "The variant ID."
        },
        "variant_annotation_set_id": {
          "type": "string",
          "description": "The ID of the variant annotation set this record belongs to."
        },
        "created": {
          "type": "string",
          "description": "The time at which this record was created, in ISO 8601 format."
        },
        "transcript_effects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ga4ghTranscriptEffect"
          },
          "description": "The transcript effect annotation for the alleles of this variant. Each\none represents the effect of a single allele on a single transcript."
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes",
          "description": "A map of additional information about the Annotation."
        }
      },
      "description": "A `VariantAnnotation` record represents the result of comparing a variant to\na set of reference data."
    },
    "ga4ghVariantAnnotationSet": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "The ID of the variant annotation set record"
        },
        "variant_set_id": {
          "type": "string",
          "title": "The ID of the variant set to which this annotation set belongs"
        },
        "name": {
          "type": "string",
          "description": "The variant annotation set name."
        },
        "analysis": {
          "$ref": "#/definitions/ga4ghAnalysis",
          "description": "Analysis details. It is essential to supply versions for all software and\nreference data used."
        },
        "attributes": {
          "$ref": "#/definitions/ga4ghAttributes",
          "description": "A map of additional information about the Annotation Set."
        }
      },
      "description": "A VariantAnnotationSet record groups VariantAnnotation records. It is derived\nfrom a VariantSet and holds information describing the software and reference\ndata used in the annotation."
    }
  }
}
